// Generated by CoffeeScript 1.9.3
(function() {
  var Webcam,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Webcam = Webcam = (function(superClass) {
    extend(Webcam, superClass);

    function Webcam() {
      this.router = bind(this.router, this);
      this.config = bind(this.config, this);
      this.getPicture = bind(this.getPicture, this);
      this.afterInit = bind(this.afterInit, this);
      return Webcam.__super__.constructor.apply(this, arguments);
    }

    Webcam.prototype.afterInit = function() {
      return setTimeout((function() {
        return this.getPicture;
      }), 1000);
    };

    Webcam.prototype.getPicture = function() {
      console.log('get picture');
      return this.event.send(this.module, this.name, "get", {});
    };

    Webcam.prototype.config = function() {
      return this.position = "left";
    };

    Webcam.prototype.router = function(event) {
      var $module, img;
      switch (event.Task) {
        case "img":
          img = "<image src='" + event.Data.img + "' />";
          $module = $(this.selector).filter("[data-name='" + event.Name + "']");
          return $module.find('.img').html(img);
      }
    };

    return Webcam;

  })(window.BasicModule);

}).call(this);
