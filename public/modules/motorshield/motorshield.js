// Generated by CoffeeScript 1.9.3
(function() {
  var Motorshield,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    hasProp = {}.hasOwnProperty;

  window.Motorshield = Motorshield = (function(superClass) {
    extend(Motorshield, superClass);

    function Motorshield() {
      this.control = bind(this.control, this);
      this.afterInit = bind(this.afterInit, this);
      return Motorshield.__super__.constructor.apply(this, arguments);
    }

    Motorshield.prototype.afterInit = function() {
      return $(this.selector).find('.control').on('click', this.control);
    };

    Motorshield.prototype.control = function(e) {
      var control;
      control = $(e.currentTarget).data('event');
      return this.event.send(this.module, this.name, 'control', control);
    };

    return Motorshield;

  })(window.BasicModule);

}).call(this);
